<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="../assets/css/StudyPage.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://kit.fontawesome.com/61a0b1fdce.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    <script src="https://unpkg.com/blockly/blockly.min.js"></script>
    <script src="../node_modules/blockly/blockly_compressed.js"></script>
    <script src="../node_modules/blockly/blocks_compressed.js"></script>
    <script src="../node_modules/blockly/msg/vi.js"></script>
    <script src="../assets/customeblock.js"></script>

    <title>Study Page</title>
</head>

<body style="background-color: #FAFAFA;">
    <header class="p-3 text-white position-relative container">
        <div class="row">
            <div class="d-flex align-items-center col-12 col-md-4 justify-content-center">
                <img src="../assets/images/Logo_LeMath.png" alt="Logo LeMath" width="130px" height="40px"></img>
            </div>
            <form action="/Search" method="post" class="col-12 col-md-4 p-3 px-3">
                <input class="w-100 border rounded-5 p-2 px-4" type="search" placeholder="Tìm kiếm"
                    style="width: 300px;" name="search" class="search">
            </form>
            <% if(user) { %>
                <div class="d-flex align-items-center col-12 col-md-4 justify-content-center">
                    <button class="user-details-button rounded-circle border-0"><i
                            class="fa-solid fa-user"></i></button>
                </div>
                <div class="user-details-container rounded-4 pink-color-bg effect-button position-absolute col-3">
                    <div class="user-details-link px-4 pt-3 pb-2">
                        <a href="/UserDetails" class="text-decoration-none text-dark">
                            <i class="fa-solid fa-user fs-14 me-2"></i>
                            <span class="fs-14">Trang cá nhân</span>
                        </a>
                    </div>
                    <div class="logout px-4 pb-3 pt-2">
                        <a href="/logout" class="text-decoration-none text-dark">
                            <i class="fa-solid fa-right-from-bracket fs-14 me-2"></i>
                            <span class="fs-14">Đăng xuất</span>
                        </a>
                    </div>
                </div>
                <% } else { %>
                    <div
                        class="d-flex align-items-center col-12 col-md-4 justify-content-center headerBtn text-decoration-none">
                        <a class="mx-2" href="/login">
                            <button class="logIn">Đăng nhập</button>
                        </a>
                        <a href="/register">
                            <button class="signUp">Đăng ký</button>
                        </a>
                    </div>
                    <% } %>
        </div>
        <nav class="navbar navbar-expand-sm justify-content-center">
            <ul class="navbar-nav">
                <li class="nav-item px-5">
                    <a class="nav-link" href="/">Về LeMath</a>
                </li>
                <li class="nav-item px-5">
                    <a class="nav-link active" href="/LessonPage">Bài học</a>
                </li>
                <li class="nav-item px-5">
                    <a class="nav-link" href="/HistoryPage">Lịch sử học</a>
                </li>
                <li class="nav-item px-5">
                    <a class="nav-link" href="/AnalyzePage/${encodeURIComponent('userId')}">Thống kê</a>
                </li>
            </ul>
        </nav>
    </header>

    <form method="post" onclick="onSubmitForm()">
        <div class="py-5" style="background-color: white; border-top: 1px solid black;">
            <div class="col-10 justify-content-center mx-auto">
                <p class="chapter">Chủ đề: <span id="chapter">
                        <%= lessons[0].name %>
                    </span>
                </p>
                <p class="lesson">Đề bài: <span id="lesson">
                        <%= questions[0].direction %>
                    </span>
                </p>
                <p id="temp" hidden data-questions="<%= JSON.stringify(questions) %>">
                    <%= questions %>
                </p>
                <p class="question" id="question" hidden>
                    <%= questions[0].question %>
                </p>
                <p id="answers" hidden data-answers="<%= JSON.stringify(answers) %>"></p>
                <div class="d-flex flex-wrap">
                    <div id="blocklyDiv" class="col-md-9 col-12" style="height: 400px; padding-top: 0px;"></div>

                    <div class="col-md-3 col-12 ps-5">
                        <div class="exercise">
                            <button type="button" mouseover="overBtn(this)" mouseout="outBtn(this)"
                                onclick="changeQuestion(this,1)" class="col-3 m-1 border rounded-2 effect-button "
                                value="1" id="firstBtn">1</button>
                            <button type="button" mouseover="overBtn(this)" mouseout="outBtn(this)"
                                onclick="changeQuestion(this, 2)" class="col-3 m-1 border rounded-2 effect-button "
                                value="1">2</button>
                            <button type="button" mouseover="overBtn(this)" mouseout="outBtn(this)"
                                onclick="changeQuestion(this, 3)" class="col-3 m-1 border rounded-2 effect-button "
                                value="1">3</button>
                            <button type="button" onclick="changeQuestion(this, 4)"
                                class="col-3 m-1 border rounded-2 effect-button " value="1">4</button>
                            <button type="button" onclick="changeQuestion(this, 5)"
                                class="col-3 m-1 border rounded-2 effect-button " value="1">5</button>
                            <button type="button" onclick="changeQuestion(this, 6)"
                                class="col-3 m-1 border rounded-2 effect-button " value="1">6</button>
                            <button type="button" onclick="changeQuestion(this, 7)"
                                class="col-3 m-1 border rounded-2 effect-button " value="1">7</button>
                            <button type="button" onclick="changeQuestion(this, 8)"
                                class="col-3 m-1 border rounded-2 effect-button " value="1">8</button>
                            <button type="button" onclick="changeQuestion(this, 9)"
                                class="col-3 m-1 border rounded-2 effect-button " value="1">9</button>
                            <button type="button" onclick="changeQuestion(this, 10)"
                                class="col-3 m-1 border rounded-2 effect-button " value="1">10</button>

                        </div>
                        <div class="text-center">
                            <p class="mt-3 col-12 time" id="countdown">
                                <%= lessons[0].time %>
                            </p>
                            <input type="hidden" id="countdownValue" name="countdownValue">
                            <button onclick="onSubmitForm()" name="answerinput" value="" type="submit"
                                class="submitBtn effect-button" id="submitBtn">Nộp</button>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </form>
    <footer class="footer " style="background-color: #FCDDEC;">
        <div class="footer-content d-flex flex-column d-flex align-items-center justify-content-center">
            <h2 class="footer-heading fs-5 fw-normal pt-4 ">Theo dõi trên nền tảng
                xã hội</h2>
            <div class="footer-links my-3">
                <i class="fa-brands fa-facebook fs-2 px-2"></i>
                <i class="fa-brands fa-instagram fs-2 px-2"></i>
                <i class="fa-brands fa-youtube fs-2 px-2"></i>
            </div>
            <small class="footer notes pb-4">© Copyright 2024 by LeMath's
                team</small>
        </div>
    </footer>

    <script>
        var countdownTime = '<%= lessons[0].time %>'.split(' : ');
        countdownTime = Number(countdownTime[0]) * 3600 + Number(countdownTime[1]) * 60 + Number(countdownTime[2]);
        var countdownInterval = setInterval(updateCountdown, 1000);
        var i = 1;
        let btn;
        var objects = {};

        const userDetailsButton = document.querySelector('.user-details-button');
        const userDetailsContainer = document.querySelector('.user-details-container');

        userDetailsButton.addEventListener('click', function () {
            userDetailsContainer.classList.toggle('active');
        });

        function updateCountdown() {
            console.log(countdownTime)
            var seconds = countdownTime % 60;
            var minutes = Math.floor(countdownTime / 60);
            var hours = Math.floor(minutes / 60);
            minutes %= 60;
            var formattedTime = ('0' + hours).slice(-2) + ' : ' + ('0' + minutes).slice(-2) + ' : ' + ('0' + seconds).slice(-2);

            document.getElementById('countdown').innerHTML = formattedTime;
            countdownTime--;

            if (countdownTime < 0) {
                clearInterval(countdownInterval);
                document.getElementById('countdown').innerHTML = '00 : 00 : 00';
                document.getElementById('submitBtn').click();
            }
        }


        function changeQuestion(button, num) {
            const questionsElement = JSON.parse(document.getElementById('temp').getAttribute('data-questions'));

            var lesson = document.getElementById('lesson');
            var question = document.getElementById('question');
            var tmp = "";
            var createNewBlock = true;
            var workspace = Blockly.getMainWorkspace();

            let questionBlocks = Blockly.getMainWorkspace().getBlocksByType('block');

            if (btn !== undefined) {
                btn.style.backgroundColor = "#FFFFFF";
                btn.style.fontWeight = "normal";
            }

            button.style.backgroundColor = "#A5A6F6";
            button.style.fontWeight = "bold";

            lesson.innerHTML = questionsElement[num - 1].direction;
            document.getElementById("question").innerHTML = questionsElement[num - 1].question;


            if (questionBlocks.length == 0) {
                createNewBlock = false;
                questionBlocks = Blockly.getMainWorkspace().getAllBlocks();

                if (questionBlocks.length > 0) {
                    if (questionBlocks[0].type === "logic_compare") {
                        tmp = tmp + questionBlocks[0].getFieldValue('OP') + " "
                    }
                    else if (questionBlocks[0].type === "logic_boolean") {
                        tmp = tmp + questionBlocks[0].getFieldValue('BOOL') + " "
                    }
                    else if (questionBlocks[0].type === "math_number") {
                        tmp = tmp + questionBlocks[0].getFieldValue('NUM') + " "
                    }
                    else
                        tmp = tmp + questionBlocks[0].type + " "
                }
            }

            for (const block of questionBlocks) {
                const childs = block.getChildren()
                if (childs.length > 0) {
                    for (const child of childs) {
                        if (child.type === "math_number") {
                            tmp = tmp + child.getFieldValue('NUM') + " "
                        }
                        else {
                            tmp = tmp + child.type + " "
                        }

                    }
                }
            }

            objects[questionsElement[i - 1]._id.toString()] = tmp
            i = num;

            workspace.clear();

            if (createNewBlock == true) {
                Blockly.Blocks['block'] = {
                    init: function () {
                        this.appendDummyInput("dummy_input")
                            .appendField(questionsElement[num - 1].question);
                        this.appendValueInput("NAME")
                            .setCheck(null)
                            .setAlign(Blockly.ALIGN_RIGHT)
                            .appendField("Hình ảnh:");
                        this.setColour(180);
                        this.setTooltip("");
                        this.setHelpUrl("");
                    }
                };

                let workspaceCoordinates = workspace.getMetricsManager().getViewMetrics(true)
                let x = workspaceCoordinates.left + (workspaceCoordinates.width / 6)
                let y = workspaceCoordinates.top + (workspaceCoordinates.height / 6)
                let blockCoordinates = new Blockly.utils.Coordinate(x, y)

                var newBlock = workspace.newBlock('block');
                newBlock.initSvg();
                newBlock.render();
                newBlock.moveTo(blockCoordinates)
            }

            btn = button;
        }

        async function onSubmitForm() {
            const obj = document.getElementById('objects');
            const questionsElement = JSON.parse(document.getElementById('temp').getAttribute('data-questions'));
            const countdownElement = document.getElementById('countdown');
            const countdownValueInput = document.getElementById('countdownValue');


            let questionBlocks = Blockly.getMainWorkspace().getBlocksByType('block');

            var tmp = "";
            var question = document.getElementById('question');

            document.getElementById("question").innerHTML = questionsElement[i - 1].question;

            if (questionBlocks.length == 0) {
                questionBlocks = Blockly.getMainWorkspace().getAllBlocks();
                if (questionBlocks.length > 0) {
                    tmp = tmp + questionBlocks[0].type + " ";
                }
            }

            for (const block of questionBlocks) {
                const childs = block.getChildren()
                if (childs.length > 0) {
                    for (const child of childs) {
                        tmp = tmp + child.type + " "
                    }
                }
                /*if (childs.length > 0) {
                    tmp = tmp + childs[0].type + " "
                }*/
            }

            objects[questionsElement[i - 1]._id.toString()] = tmp
            var submitBtn = document.getElementById('submitBtn');
            submitBtn.value = JSON.stringify(objects);
            if (countdownElement && countdownValueInput) {
                countdownValueInput.value = countdownElement.innerHTML;
            }
        }
    </script>
</body>

</html>